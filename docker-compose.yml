services: 
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Express"
    ports:
      - "1433:1433"
    volumes:
      - sqlvolume:/var/opt/mssql
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"   
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network
  
  frontend:
    build:
      context: ./frontend/sof-data-app
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://webapi:8080
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend/sof-data-app:/app
    depends_on:
      - webapi  
    networks:
      - app-network

  webapi:
    build:
      context: ./backend/StackOverFlowApi
      dockerfile: WebApi/Dockerfile
    ports:
      - "5000:8080"
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:8080      
      - OTEL__ENDPOINT=http://otel-collector:4317  # HTTP OTLP
      - RabbitMq__Host=rabbitmq
      - RabbitMq__Username=user
      - RabbitMq__Password=password
    depends_on:
      - db
      - rabbitmq      
      - otel-collector
    networks:
      - app-network
 
  etl:
    build:
      context: ./backend/ETL
      dockerfile: ETL/Dockerfile
    ports:
      - "5100:8100"
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:8100 
      - RabbitMq__Host=rabbitmq
      - RabbitMq__Username=user
      - RabbitMq__Password=password
    depends_on:
      - db
      - rabbitmq
    networks:
      - app-network

  grpc:
    build:
      context: ./backend/GrpcService
      dockerfile: GrpcService/Dockerfile
    ports: 
      - "5201:5201"
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - app-network

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - ./otel-collector/otel-collector-config.yaml:/etc/otel/config.yaml
    command: ["--config", "/etc/otel/config.yaml"]
    depends_on:
      - tempo
    networks:
      - app-network

  tempo:
    image: grafana/tempo:latest
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - tempo-data:/var/tempo
      - ./tempo/tempo.yaml:/etc/tempo.yaml
    ports:
      - "3200:3200"
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - tempo
      - otel-collector
    networks:
      - app-network

volumes:
  sqlvolume:
  tempo-data:

networks:
  app-network:
    driver: bridge